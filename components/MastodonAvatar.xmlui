<Component name="MastodonAvatar">

  <ModalDialog id="userProfileDialog" title="">
    <VStack gap="1rem">
      <!-- Header Image (only shown if available and not a placeholder) -->
      <Fragment when="{window.hasHeader($param.header_url)}">
        <Image
          src="{$param.header_url}"
          alt="Profile header image"
          width="100%"
          fit="cover"
          aspectRatio="3 / 1"
        />
      </Fragment>

      <!-- Profile Info -->
        <!-- Avatar (positioned to overlap header if exists) -->
        <VStack marginTop="{window.avatarTopMargin($param.header_url)}" gap="0" padding="0 1rem">
        <Avatar
          url="{$param.avatar_url}"
          size="lg"
          name="{window.getDisplayName($param)}"
        />

        <!-- User Info -->
        <Text variant="strong" fontSize="1.2rem">{window.getDisplayName($param)}</Text>
        <Text variant="caption">@{window.getUsername($param)}</Text>

        <!-- Stats -->
        <HStack marginTop="0.5rem">
          <VStack gap="0">
            <Text variant="strong">{$param.followers_count || 0}</Text>
            <Text variant="caption">Followers</Text>
          </VStack>
          <VStack gap="0">
            <Text variant="strong">{$param.following_count || 0}</Text>
            <Text variant="caption">Following</Text>
          </VStack>
          <VStack gap="0">
            <Text variant="strong">{$param.statuses_count || 0}</Text>
            <Text variant="caption">Posts</Text>
          </VStack>
        </HStack>

        <!-- Profile Bio -->
        <Card padding="$space-1" marginTop="1rem">
          <Fragment when="{$param.note}">
            <Markdown content="{$param.note}" />
          </Fragment>
          <Fragment when="{!$param.note}">
            <Text variant="caption">No bio available</Text>
          </Fragment>
        </Card>

        <Text marginTop="1rem" variant="caption">Joined {window.formatDate($param.created_at)}</Text>

        <!--
        <Text preserveLinebreaks="true">{JSON.stringify($param, null, 2)}</Text>
        -->

        <Fragment when="{$param.url}">
          <!-- Profile Link -->
          <HStack marginTop="1rem">
            <Link to="{$param.url}" target="_blank">
              <Button size="xs" label="View on Mastodon" />
            </Link>
          </HStack>
        </Fragment>
      </VStack>
    </VStack>
  </ModalDialog>


  <Avatar
    url="{$props.url}"
    size="xs"
    onClick="{
      // Check if this is a reblog avatar
      const isReblogAvatar = $props.url === $props.item.reblog_avatar_url;

      // If it's a reblog avatar, use the reblog account data
      userProfileDialog.open(isReblogAvatar ? {
        avatar_url: $props.item.reblog_avatar_url,
        display_name: window.getReblogDisplayName($props.item),
        username: window.getReblogUsername($props.item),
        header_url: $props.item.reblog_header_url,
        note: $props.item.reblog_note,
        followers_count: $props.item.reblog_followers_count,
        following_count: $props.item.reblog_following_count,
        statuses_count: $props.item.reblog_statuses_count,
        url: null,
        created_at: $props.item.reblog_created_at || ''
        } : {
        avatar_url: $props.item.avatar_url,
        display_name: window.getDisplayName($props.item),
        username: window.getUsername($props.item),
        header_url: $props.item.header_url,
        note: $props.item.note,
        followers_count: $props.item.followers_count,
        following_count: $props.item.following_count,
        statuses_count: $props.item.statuses_count,
        url: $props.item.instance_qualified_account_url,
        created_at: $props.item.created_at
      })
    }"
  />

</Component>