<Component name="Home" var.loaded="{false}" var.syncCompleted="{false}">

<AppState id="toolsState" bucket="toolsState" initialValue="{ { zoom: 20 } }" />
<AppState id="debugState" bucket="debugState" />

<DataSource
  id="ephemeralToots"
  url="{ window.query }"
  body="{ window.tootsHome(100) }"
  method="POST"
  onLoaded="(data) => {
    window.ephemeralData = data;
    loaded = true;
    if (!syncCompleted) {
      syncCompleted = true;
      updateTootsHome.execute();
      syncTootsHome.execute();
    }
  }"
/>

<APICall
  id="updateTootsHome"
  method="post"
  url="{window.query}"
  body="{ window.updateTootsHome() }"

  onSuccess="() => {
    console.log('updateTootsHome success')
  }"
/>

<APICall
  id="syncTootsHome"
  method="post"
  url="{window.query}"
  body="{ window.syncFTSAfterUpdate() }"
  onSuccess="() => {
    console.log('syncFTSAfterUpdate success')
  }"
/>



  <VStack width="90%" maxWidth="90vw" marginRight="$space-4">

  <!--
   <Text preserveLinebreaks="true"> { JSON.stringify(mediaSize, null, 2) } </Text>
  -->


    <!-- Loading indicator -->
    <Fragment when="{!loaded}" >
      <VStack>
        <Text>Loading timeline data...</Text>
      </VStack>
    </Fragment>

    <!-- Timeline display -->
    <Fragment when="{loaded}" >
      <List data="{ephemeralToots}">
        <VStack>
               <!-- Regular Post Display -->
               <Fragment when="{!$item.reblog}">
                 <RegularPost item="{$item}" debugMode="{debugState.value.enabled}" />
               </Fragment>

               <!-- Reblog Display -->
               <Fragment when="{$item.reblog}">
                 <ReblogPost item="{$item}" debugMode="{debugState.value.enabled}" />
               </Fragment>
        </VStack>

        <ContentSeparator />
      </List>
    </Fragment>

  </VStack>

</Component>