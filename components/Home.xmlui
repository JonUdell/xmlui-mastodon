<Component name="Home" var.loaded="{false}" var.syncCompleted="{false}">

<AppState id="toolsState" bucket="toolsState" initialValue="{{ zoom: 20, displayMode: 'minimal' }}" />
<AppState id="debugState" bucket="debugState" />

<DataSource
  id="ephemeralToots"
  url="{ window.query }"
  body="{ window.tootsHome(100) }"
  method="POST"
  onLoaded="(data) => {
    window.ephemeralData = data;
    loaded = true;
    if (!syncCompleted) {
      syncCompleted = true;
      updateTootsHome.execute();
      syncTootsHome.execute();
    }
  }"
/>

<APICall
  id="updateTootsHome"
  method="post"
  url="{window.query}"
  body="{ window.updateTootsHome() }"

  onSuccess="() => {
    console.log('updateTootsHome success')
  }"
/>

<APICall
  id="syncTootsHome"
  method="post"
  url="{window.query}"
  body="{ window.syncFTSAfterUpdate() }"
  onSuccess="() => {
    console.log('syncFTSAfterUpdate success')
  }"
/>



  <VStack width="90%" maxWidth="90vw" marginRight="$space-4">

  <!--
   <Text preserveLinebreaks="true"> { JSON.stringify(mediaSize, null, 2) } </Text>
  -->


    <!-- Loading indicator -->
    <Text when="{!loaded}">Loading timeline data...</Text>

    <!-- Timeline display -->
    <List when="{loaded}" height="*" data="{ephemeralToots}">
      <VStack>
             <!-- Regular Post Display -->
             <RegularPost when="{!$item.reblog}" item="{$item}" debugMode="{debugState.value.enabled}" />

             <!-- Reblog Display -->
             <ReblogPost when="{$item.reblog}" item="{$item}" debugMode="{debugState.value.enabled}" />
      </VStack>

      <ContentSeparator />
    </List>

  </VStack>

</Component>