<Component name="RegularPost">
  <AppState id="toolsState" bucket="toolsState" />

  <!-- Reply indicator if this is a reply -->
  <Fragment when="{$props.item.in_reply_to_account_id}">
    <DataSource
      id="replyAccount-{$props.item.id}"
      url="{window.query}"
      method="POST"
      body="{window.lookupAccount($props.item.in_reply_to_account_id)}"
      onLoaded="(data) => {
        if (data && data.length > 0 && data[0].username) {
          window.accountCache[$props.item.in_reply_to_account_id] = data[0];
        }
      }"
    >
      <Text>
        Replying to: {replyAccount-{$props.item.id}.value && replyAccount-{$props.item.id}.value.length > 0 ? replyAccount-{$props.item.id}.value[0].display_name + ' (@' + replyAccount-{$props.item.id}.value[0].username + ')' : '...'}
      </Text>
    </DataSource>
  </Fragment>

  <!-- Regular post header with timestamp on its own line -->
  <VStack gap="0.25rem">
    <!-- Debug info -->
    <Fragment when="{$props.debugMode}">
      <VStack gap="0.1rem">
        <Text variant="caption" fontSize="0.7rem" color="$color-text-subtle" fontFamily="monospace">
          Post ID: {$props.item.id}
        </Text>
        <Fragment when="{$props.item.media_type}">
          <Text variant="caption" fontSize="0.7rem" color="$color-text-subtle" fontFamily="monospace">
            Media: {$props.item.media_type} | Preview: {$props.item.preview_url ? 'Yes' : 'No'} | Original: {$props.item.media_url ? 'Yes' : 'No'}
          </Text>
        </Fragment>
      </VStack>
    </Fragment>

    <!-- Timestamp line -->
    <Text variant="caption" fontSize="0.75rem" color="$color-text-subtle">
      {formatHumanElapsedTime($props.item.created_at)}
    </Text>

    <!-- Avatar and user info line -->
    <HStack gap="0.4rem">
      <MastodonAvatar
        url="{$props.item.avatar_url}"
        size="xs"
        name="{window.getDisplayName($props.item)}"
        item="{$props.item}"
      />
      <HStack gap="0.5rem">
        <Text variant="strong">{window.getDisplayName($props.item)}</Text>
        <Text variant="caption">@{window.getUsername($props.item)}</Text>
      </HStack>
    </HStack>
  </VStack>

  <VStack>
    <Fragment when="{$props.item.content}">
      <Markdown content="{$props.item.content}" />
    </Fragment>

    <Fragment when="{$props.item.preview_url}">
      <ImageWithModal
        src="{$props.item.preview_url}"
        mediaUrl="{$props.item.media_url}"
        mediaType="{$props.item.media_type}"
        width="{toolsState.value.zoom}%"
      />
    </Fragment>
  </VStack>

  <Reactions item="{$props.item}" />
</Component>
