<Component name="Reactions" var.favoriteStartTime="{null}" var.localFavorited="{null}" var.localReblogged="{null}" var.localFavoritesCount="{null}" var.localReblogsCount="{null}" var.clickStartTime="{null}">

  <APICall
    id="favoritePost"
    method="post"
    url="{window.config.server}/api/v1/statuses/{window.getPostId($props.item)}/favourite"
    headers="{{
      'Authorization': 'Bearer ' + window.config.mastodonToken
    }}"
    errorNotificationMessage="Failed to favorite post">
    <event name="beforeRequest">
      favoriteStartTime = Date.now();
      const clickToApiDelay = clickStartTime ? favoriteStartTime - clickStartTime : 0;
      console.log('‚è±Ô∏è Click-to-API delay:', clickToApiDelay + 'ms');
      console.log('üü° Favorite request started at:', favoriteStartTime);
      console.log('üü° Pre-favorite UI state - getPostFavourited:', window.getPostFavourited($props.item));
    </event>
    <event name="success">
      const endTime = Date.now();
      const duration = endTime - favoriteStartTime;
      console.log('üü¢ Favorite API completed in:', duration + 'ms');

      // IMMEDIATE LOCAL UPDATE: Set local state for instant UI feedback
      console.log('üîß Before update - localFavorited:', localFavorited, 'localFavoritesCount:', localFavoritesCount);
      localFavorited = true;
      localFavoritesCount = ($props.item.favourites_count || 0) + 1;
      console.log('üîß After update - localFavorited:', localFavorited, 'localFavoritesCount:', localFavoritesCount);

      console.log('üîÑ Local favorite state updated to:', localFavorited);
      console.log('üîÑ Local favorites count updated to:', localFavoritesCount);
    </event>
    <event name="error">
      const endTime = Date.now();
      const duration = endTime - favoriteStartTime;
      console.log('üî¥ Favorite request failed after:', duration + 'ms');
    </event>
  </APICall>

  <APICall
    id="unfavoritePost"
    method="post"
    url="{window.config.server}/api/v1/statuses/{window.getPostId($props.item)}/unfavourite"
    headers="{{
      'Authorization': 'Bearer ' + window.config.mastodonToken
    }}"
    errorNotificationMessage="Failed to unfavorite post">
    <event name="beforeRequest">
      favoriteStartTime = Date.now();
      console.log('üü° Unfavorite request started at:', favoriteStartTime);
      console.log('üü° Pre-unfavorite UI state - getPostFavourited:', window.getPostFavourited($props.item));
    </event>
    <event name="success">
      const endTime = Date.now();
      const duration = endTime - favoriteStartTime;
      console.log('üü¢ Unfavorite API completed in:', duration + 'ms');

      // IMMEDIATE LOCAL UPDATE: Set local state for instant UI feedback
      localFavorited = false;  // ‚Üê This should be FALSE for unfavorite
      localFavoritesCount = Math.max(0, ($props.item.favourites_count || 0) - 1);  // ‚Üê DECREMENT count

      console.log('üîÑ Local favorite state updated to:', localFavorited);
      console.log('üîÑ Local favorites count updated to:', localFavoritesCount);
    </event>
    <event name="error">
      const endTime = Date.now();
      const duration = endTime - favoriteStartTime;
      console.log('üî¥ Unfavorite request failed after:', duration + 'ms');
    </event>
  </APICall>

  <APICall
    id="reblogPost"
    method="post"
    url="{window.config.server}/api/v1/statuses/{window.getPostId($props.item)}/reblog"
    headers="{{
      'Authorization': 'Bearer ' + window.config.mastodonToken
    }}"
    errorNotificationMessage="Failed to boost post" />
  <APICall
    id="unreblogPost"
    method="post"
    url="{window.config.server}/api/v1/statuses/{window.getPostId($props.item)}/unreblog"
    headers="{{
      'Authorization': 'Bearer ' + window.config.mastodonToken
    }}"
    errorNotificationMessage="Failed to unboost post" />

  <HStack verticalAlignment="center" gap="0.75rem">
    <HStack verticalAlignment="center" gap="0.25rem">
      <SocialButton icon="reply" />
      <Text variant="secondary">
        {$props.item.replies_count || 0}
      </Text>
    </HStack>
    <HStack verticalAlignment="center" gap="0.25rem">
      <SocialButton
        icon="trending-up"
        themeColor="{window.getPostReblogged($props.item) ? 'attention' : 'secondary'}">
        <event name="click">
          window.getPostReblogged($props.item) ? unreblogPost.execute() : reblogPost.execute()
        </event>
      </SocialButton>
      <Text variant="secondary">
        {localReblogsCount !== null ? localReblogsCount : ($props.item.reblogs_count || 0)}
      </Text>
    </HStack>
    <HStack verticalAlignment="center" gap="0.25rem">
      <SocialButton
        icon="like"
        themeColor="{(localFavorited !== null ? localFavorited : window.getPostFavourited($props.item)) ? 'attention' : 'secondary'}">
        <event name="click">
          clickStartTime = Date.now();
          console.log('üñ±Ô∏è Click registered at:', clickStartTime);
          console.log('‚ù§Ô∏è Like button clicked');
          console.log('‚ù§Ô∏è localFavorited:', localFavorited);
          console.log('‚ù§Ô∏è window.getPostFavourited($props.item):', window.getPostFavourited($props.item));
          console.log('‚ù§Ô∏è Final state:', localFavorited !== null ? localFavorited : window.getPostFavourited($props.item));

          (localFavorited !== null ? localFavorited : window.getPostFavourited($props.item)) ? unfavoritePost.execute() : favoritePost.execute()
        </event>
      </SocialButton>
      <Text variant="secondary">
        {localFavoritesCount !== null ? localFavoritesCount : ($props.item.favourites_count || 0)}
      </Text>
    </HStack>
  </HStack>
</Component>